next steps:


programmer:

- current stack : new
- buttons in stack-section: (play/pause) add/insert/update/loadToProg    saveStackto
 (play blinds programmer)
- ability to add image,effect,wait,blend,command and test all this
- visualize channel out put , as pixeles 

new plan:

- stacks
- frames (image,effect,wait,blend)

- manage stacks via setup
- allow adding of images to stack


- dmxbox style gui for most objects
- gui for toggeling queues
- implement chemsys style ques functionality (group+selector+blend+hold) including save/load to json
- device models
- device parameters
- examples for
	* ledpar 6ch
	* ledpar 7ch
	* miniscanHPE
	* quadPhase
	* atomic strobe
	* fog unit
	* dimmer/switch pack


- travis
  *valgrind checks
  *xvfb sdl testing - mouse clicks - and compare dmx output agains table
  *records cpu time for mouseclicks tests and publish data somewhere (commit it into a file, so it can be displayed on a static github pages page)

